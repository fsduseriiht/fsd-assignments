#####################	server properties	#####################
server.servlet.context-path=/FsdSpringProject
server.port=8080

#####################	spring.datasource properties	#####################
#spring.datasource.name = fsd_hibernate
spring.datasource.url=jdbc:mysql://localhost:3306/fsd_hibernate?useSSL=true&createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=admin
#spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.initialize=true

#####################	spring.jpa properties	#####################
spring.jpa.generate-ddl=true


# ==============================================================
# = Hibernate ddl auto (create, create-drop, update)
# ==============================================================
spring.jpa.hibernate.ddl-auto = update



#########	Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.database-platform= org.hibernate.dialect.MySQL5Dialect

#########	Hibernate Properties
#########	The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#########	Show or not log for each sql query
spring.jpa.show-sql = true

#########	SPRING WEB MVC - replacement for dispatcher servlet.
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

logging.level.org.springframework=TRACE
logging.level.com=TRACE

# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?


# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always
